"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤
"""
import requests
import json

BASE_URL = "http://localhost:44445"

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints"""
    print("üé´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints –¥–ª—è –±–∏–ª–µ—Ç–æ–≤")
    print("=" * 50)
    
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/posts/")
        if response.status_code == 200:
            posts = response.json()
            if posts:
                post = posts[0]
                print(f"‚úÖ –ü–æ—Å—Ç: {post.get('title', 'N/A')}")
                print(f"   üé´ –î–æ—Å—Ç—É–ø–Ω–æ: {post.get('tickets_available', 'N/A')}/{post.get('tickets_limit', 'N/A')}")
                print(f"   üìä –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ: {post.get('tickets_booked', 'N/A')}")
                print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {post.get('is_available', 'N/A')}")
            else:
                print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ (ID=1):")
    try:
        response = requests.get(f"{BASE_URL}/posts/1")
        if response.status_code == 200:
            post = response.json()
            print(f"‚úÖ –ü–æ—Å—Ç: {post.get('title', 'N/A')}")
            print(f"   üé´ –î–æ—Å—Ç—É–ø–Ω–æ: {post.get('tickets_available', 'N/A')}/{post.get('tickets_limit', 'N/A')}")
            print(f"   üìä –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ: {post.get('tickets_booked', 'N/A')}")
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {post.get('is_available', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ (ID=1):")
    try:
        response = requests.get(f"{BASE_URL}/posts/1/availability/")
        if response.status_code == 200:
            availability = response.json()
            print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {availability.get('available', 'N/A')}")
            print(f"   üìã –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ: {availability.get('booked', 'N/A')}")
            print(f"   üéØ –õ–∏–º–∏—Ç: {availability.get('limit', 'N/A')}")
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {availability.get('is_available', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_api_endpoints()
